"""Add trigger_event_type to AchievementDefinition and update initial data

Revision ID: 4ec29611c9b5
Revises: 414794921235
Create Date: 2025-05-09 12:01:14.121022

"""
from alembic import op
import sqlalchemy as sa


# イベントタイプの定数 (motopuppu/achievement_evaluator.py と合わせる予定)
EVENT_ADD_VEHICLE = "add_vehicle"
EVENT_ADD_FUEL_LOG = "add_fuel_log"
EVENT_ADD_MAINTENANCE_LOG = "add_maintenance_log"
EVENT_ADD_NOTE = "add_note"
EVENT_ADD_ODO_RESET = "add_odo_reset"

# revision identifiers, used by Alembic.
revision = '4ec29611c9b5' # あなたの環境で生成された実際のID
down_revision = '414794921235' # 前回の実績モデル追加時のリビジョンID
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('achievement_definitions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('trigger_event_type', sa.String(length=100), nullable=True))
        batch_op.create_index(batch_op.f('ix_achievement_definitions_trigger_event_type'), ['trigger_event_type'], unique=False)
    # ### end Alembic commands ###

    # ▼▼▼ 既存の初期実績データに trigger_event_type を設定する ▼▼▼
    achievement_definitions_table = sa.table(
        'achievement_definitions',
        sa.column('code', sa.String),
        sa.column('trigger_event_type', sa.String)
    )

    bind = op.get_bind() # 現在の接続を取得
    
    # FIRST_VEHICLE
    stmt_vehicle = achievement_definitions_table.update().\
        where(achievement_definitions_table.c.code == 'FIRST_VEHICLE').\
        values(trigger_event_type=EVENT_ADD_VEHICLE)
    bind.execute(stmt_vehicle)

    # FIRST_FUEL_LOG
    stmt_fuel = achievement_definitions_table.update().\
        where(achievement_definitions_table.c.code == 'FIRST_FUEL_LOG').\
        values(trigger_event_type=EVENT_ADD_FUEL_LOG)
    bind.execute(stmt_fuel)
    
    # FIRST_MAINT_LOG
    stmt_maint = achievement_definitions_table.update().\
        where(achievement_definitions_table.c.code == 'FIRST_MAINT_LOG').\
        values(trigger_event_type=EVENT_ADD_MAINTENANCE_LOG)
    bind.execute(stmt_maint)

    # FIRST_NOTE
    stmt_note = achievement_definitions_table.update().\
        where(achievement_definitions_table.c.code == 'FIRST_NOTE').\
        values(trigger_event_type=EVENT_ADD_NOTE)
    bind.execute(stmt_note)

    # FIRST_ODO_RESET
    stmt_odo = achievement_definitions_table.update().\
        where(achievement_definitions_table.c.code == 'FIRST_ODO_RESET').\
        values(trigger_event_type=EVENT_ADD_ODO_RESET)
    bind.execute(stmt_odo)
    # ▲▲▲ 初期実績データの更新処理ここまで ▲▲▲


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('achievement_definitions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_achievement_definitions_trigger_event_type'))
        batch_op.drop_column('trigger_event_type')
    # ### end Alembic commands ###