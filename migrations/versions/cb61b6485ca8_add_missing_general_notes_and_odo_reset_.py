"""Add missing general_notes and odo_reset_logs tables

Revision ID: cb61b6485ca8
Revises: cd7db2474a21
Create Date: 2025-05-06 01:18:21.241602

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'cb61b6485ca8'
down_revision = 'cd7db2474a21'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('general_notes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('motorcycle_id', sa.Integer(), nullable=True),
    sa.Column('note_date', sa.Date(), nullable=False),
    sa.Column('title', sa.String(length=150), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('category', sa.String(length=20), server_default='note', nullable=False),
    sa.Column('todos', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['motorcycle_id'], ['motorcycles.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('general_notes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_general_notes_category'), ['category'], unique=False)

    op.create_table('odo_reset_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('motorcycle_id', sa.Integer(), nullable=False),
    sa.Column('reset_date', sa.Date(), nullable=False),
    sa.Column('odometer_before_reset', sa.Integer(), nullable=False),
    sa.Column('odometer_after_reset', sa.Integer(), nullable=False),
    sa.Column('offset_change', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['motorcycle_id'], ['motorcycles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('odo_reset_logs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_odo_reset_logs_reset_date'), ['reset_date'], unique=False)

    with op.batch_alter_table('attachments', schema=None) as batch_op:
        batch_op.drop_constraint('attachments_maintenance_entry_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'maintenance_entries', ['maintenance_entry_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('consumable_logs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('odometer_reading_at_change', sa.Integer(), nullable=True))
        batch_op.drop_constraint('consumable_logs_motorcycle_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'motorcycles', ['motorcycle_id'], ['id'], ondelete='CASCADE')
        batch_op.drop_column('total_distance_at_change')

    with op.batch_alter_table('fuel_entries', schema=None) as batch_op:
        batch_op.create_index('ix_fuel_entries_entry_date', ['entry_date'], unique=False)
        batch_op.drop_constraint('fuel_entries_motorcycle_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'motorcycles', ['motorcycle_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('maintenance_entries', schema=None) as batch_op:
        batch_op.create_index('ix_maintenance_entries_category', ['category'], unique=False)
        batch_op.create_index('ix_maintenance_entries_maintenance_date', ['maintenance_date'], unique=False)
        batch_op.drop_constraint('maintenance_entries_motorcycle_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'motorcycles', ['motorcycle_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('maintenance_reminders', schema=None) as batch_op:
        batch_op.drop_constraint('maintenance_reminders_motorcycle_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'motorcycles', ['motorcycle_id'], ['id'], ondelete='CASCADE')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('maintenance_reminders', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('maintenance_reminders_motorcycle_id_fkey', 'motorcycles', ['motorcycle_id'], ['id'])

    with op.batch_alter_table('maintenance_entries', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('maintenance_entries_motorcycle_id_fkey', 'motorcycles', ['motorcycle_id'], ['id'])
        batch_op.drop_index('ix_maintenance_entries_maintenance_date')
        batch_op.drop_index('ix_maintenance_entries_category')

    with op.batch_alter_table('fuel_entries', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fuel_entries_motorcycle_id_fkey', 'motorcycles', ['motorcycle_id'], ['id'])
        batch_op.drop_index('ix_fuel_entries_entry_date')

    with op.batch_alter_table('consumable_logs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('total_distance_at_change', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('consumable_logs_motorcycle_id_fkey', 'motorcycles', ['motorcycle_id'], ['id'])
        batch_op.drop_column('odometer_reading_at_change')

    with op.batch_alter_table('attachments', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('attachments_maintenance_entry_id_fkey', 'maintenance_entries', ['maintenance_entry_id'], ['id'])

    with op.batch_alter_table('odo_reset_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_odo_reset_logs_reset_date'))

    op.drop_table('odo_reset_logs')
    with op.batch_alter_table('general_notes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_general_notes_category'))

    op.drop_table('general_notes')
    # ### end Alembic commands ###
