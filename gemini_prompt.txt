はい、承知いたしました。
このセッションで実施した修正内容（燃費記録・整備記録の個別車両および全車両対応のCSVエクスポート機能の実装、および関連するUI改善）を反映して、Geminiプロンプトのフォーマットを更新します。

以下が更新されたプロンプトです。次回このフォーマットをご利用ください。

こんにちは、Gemini。Flask Webアプリケーション「もとぷっぷー」の開発支援をお願いします。

1.  **プロジェクト概要:**
    * 名称: もとぷっぷー
    * 目的: オートバイ所有者向けの車両情報、燃費、整備記録、リマインダー、メモ管理Webアプリ。
    * 認証: Misskey MiAuth

2.  **主要技術スタック:**
    * バックエンド: Python, Flask, SQLAlchemy, PostgreSQL (本番: Render)
    * フロントエンド: Jinja2, Bootstrap 5, JavaScript (FullCalendar.io等)
    * フォーム処理: Flask-WTF (バリデーション、CSRF対策)
    * DBマイグレーション: Flask-Migrate (Alembic)
    * デプロイ: Render (Gunicorn)
    * 開発環境: Podman (Mac/Fedora), Python venv
    * その他: python-dotenv, requests, python-dateutil, zoneinfo (Python 3.9+)

3.  **アーキテクチャ・構成:**
    * 標準的なFlask構成（アプリケーションファクトリ使用）。
    * 機能ごとにBlueprintを使用 (auth, main, vehicle, fuel, maintenance, notes, dev_auth など)。
    * `models.py` にDBモデル定義。
    * `forms.py` にFlask-WTFフォームクラス定義。
    * `motopuppu/views/` 以下に各Blueprintのルート定義。
    * `templates/`, `static/` ディレクトリ。
    * Misskey共有機能は `static/js/misskey_share.js` に共通化し、インスタンスドメインはコンテキストプロセッサ経由で提供。

4.  **主要な実装済み機能:**
    * ユーザー認証 (Misskey MiAuth, ローカル開発用ログイン) - 堅牢な実装
    * 車両管理 (CRUD, 複数対応、デフォルト設定) - フォーム(Flask-WTF), CSRF対策済
    * ODOメーターリセット機能:
        * リセット操作（リセット日、リセット前後のメーター表示値）の記録 (`OdoResetLog` モデル) - フォーム(Flask-WTF)
        * 累積オフセットキャッシュ (`Motorcycle.odometer_offset`) の更新 (関連ログの追加/編集/削除時に `OdoResetLog` 全体から再計算)
        * ODOリセット履歴の表示、編集、削除、過去の履歴の新規追加 (CRUD) - フォーム(Flask-WTF), CSRF対策済
    * 給油記録 (CRUD, ログ表示, フィルター/ソート, **CSVエクスポート機能（個別車両/全車両対応）**) - フォーム(Flask-WTF), CSRF対策済
        * 実走行距離 (`total_distance`) の記録 (記録日時点のオフセットを考慮)
        * 燃費計算 (`km_per_liter` プロパティ、平均燃費計算)
    * 整備記録 (CRUD, ログ表示, フィルター/ソート, **CSVエクスポート機能（個別車両/全車両対応）**) - フォーム(Flask-WTF), CSRF対策済
        * 実走行距離 (`total_distance_at_maintenance`) の記録 (記録日時点のオフセットを考慮)
        * 費用計算 (`total_cost` プロパティ)
        * メンテナンスリマインダーとの連携 (最終実施記録の自動更新)
    * ノート (CRUD、カテゴリ別[ノート/タスクリスト], ログ表示, フィルター) - フォーム(Flask-WTF), CSRF対策済
        * FieldList によるTODOアイテム管理、JavaScriptによる動的追加/削除
    * **Misskey共有機能**: 給油記録、整備記録、ノートの各情報をMisskeyに共有する機能（JavaScriptで共通化済み、インスタンスドメインはFlask設定から取得し、フォールバック処理あり）。
    * メンテナンスリマインダー (CRUD) - フォーム(Flask-WTF), CSRF対策済
    * ダッシュボード (統計概要, FullCalendarによる記録カレンダー表示, 直近ログ表示, リマインダー通知)
        * FullCalendarの高度なカスタマイズ（日本語化、祝日表示、イベントポップオーバー）
    * その他: Favicon, 詳細なロギング

5.  **現在の状況・課題 [次回更新]:**
    * マイグレーション:
        * `general_notes`テーブルの`content`カラムNULL許容化済み。
        * 現在の最新リビジョン: `cb61b6485ca8` の後に `content` NULL化のマイグレーションが適用されている状態 (要 `flask db history` で再確認)。
    * **直近の作業 (完了済み):**
        * 主要機能への Flask-WTF導入完了 (バリデーション強化、コード簡潔化)。
        * 総走行距離計算の精度向上: 給油・整備記録時に記録日時点のオフセットを `calculate_cumulative_offset_from_logs` で取得し、実走行距離を計算・保存するよう修正。
        * ODOメーターリセット周りの改善: 関連ログ変更時のオフセットキャッシュ (`Motorcycle.odometer_offset`) 更新ロジック実装。
        * CSRF対策の実施: 主要なフォーム送信に加え、一覧ページ等での削除・状態変更ボタン（車両削除、デフォルト設定、ODO履歴削除、リマインダー削除など）にフォームとトークンを追加し、対策を実施。
        * ダッシュボード機能の強化（FullCalendarカスタマイズ、統計表示）。
        * ノート機能の改善（タスクリスト対応、FieldList連携）。
        * 各種テンプレートの改善、UI調整。
        * Misskey共有機能の共通化:
            * 各テンプレートに個別に記述されていたMisskey共有JavaScriptを `static/js/misskey_share.js` に集約。
            * MisskeyインスタンスドメインをFlaskアプリケーションのコンテキストプロセッサ経由で全テンプレートに提供。
            * インスタンスドメイン取得処理において、未設定時や空の場合に `'misskey.io'` へフォールバックする処理を強化。
        * **燃費記録および整備記録のCSVエクスポート機能実装**:
            * 個別車両ごとの記録をエクスポートする機能。
            * ログインユーザーの全車両の記録を一括でエクスポートする機能（一覧フィルターと連動）。
            * エクスポートボタンのUI調整（車両選択状態に応じた表示切り替え）。
        * 記録追加フォームへの車両ID引き継ぎ改善（一覧フィルターで選択中の車両IDを「新規追加」時に引き継ぐ）。
    * **現在の課題・改善点:**
        * a. CSRF対策の最終確認: フォーム未使用のPOSTルートが残っていないか、既存の対策が意図通り機能しているか最終確認。
        * b. （既に対応済）SQLAlchemyクエリスタイルの統一: 1.x系 (`Model.query`) と2.0系 (`db.session.execute(select(...))`) の混在解消 (2.0スタイルへの統一を推奨)。
        * c. DBスキーマレベルの制約適用: `Motorcycle.is_default` カラムにDBレベルでの `DEFAULT false` 制約を適用 (要マイグレーション)。
        * d. 型整合性の最終確認: フォーム(Integer/Decimal)とモデル(Float)間の型変換、特に整備記録のコスト関連フィールドの挙動を確認。
        * e. ヘルパー関数 vs モデルメソッド: `main.py` のヘルパー関数 (`get_latest_total_distance`, `calculate_average_kpl`) を `Motorcycle` モデルのメソッドに集約・整理。
        * f. CSSの整理検討: `base.html` のインラインCSS（TODOリスト用など）の外部 `style.css` への移行検討。
        * g. ODOメーターリセット: 「累積オフセットを0に戻す」専用機能の追加検討。
        * h. ODO値表示方法: 給油・整備記録一覧等でのODO値（メーター値と実走行距離）の表示方法の最終決定と実装。
        * i. `Motorcycle.odometer_offset` の将来: 現在のキャッシュ方式から、常に `OdoResetLog` から動的に計算する方式への移行検討。
        * j. テストコード: 単体テスト・結合テストの拡充。
        * k. (新規) CSVインポート機能の実装検討 (バックアップデータの復元や他アプリからの移行用)。
    * 現在のプロジェクトディレクトリ: (変更なし、省略可能)

6.  **今回のセッションでの目標 [毎回更新]:**
    * 

7.  **Geminiに期待する役割:**
    * コードの提案、修正案の提示 (ファイル全体の表示希望)
    * 実装に関する質問への回答
    * コードレビュー
    * エラー分析と解決策の提案
    * [その他、必要に応じて追記]

8.  **その他 [必要に応じて]:**
    * DBスキーマの変更については、過去に問題が発生した経験があるため、特に慎重に進めたい。
    * 修正は既存のUIや他の機能への影響を最小限に抑えたい。
    * 現在CSRF対策としてFlask-WTFが導入されているため、CSRFトークンのエラーが発生しないよう注意すること。