こんにちは、Gemini。Flask Webアプリケーション「もとぷっぷー」の開発支援をお願いします。

### **1.  プロジェクト概要**

* **名称**: もとぷっぷー
* **目的**: オートバイ所有者向けの車両情報、燃費、整備記録、リマインダー、メモ管理、実績、**そして活動・セッティング記録**Webアプリ。公道走行車両に加え、レーサーやモトクロッサーといった競技用車両の管理にも対応。
* **認証**: Misskey MiAuth

### **2.  主要技術スタック**

* **バックエンド**: Python, Flask, SQLAlchemy, PostgreSQL (本番: Render)
* **フロントエンド**: Jinja2, Bootstrap 5, JavaScript
* **フォーム処理**: Flask-WTF (バリデーション、CSRF対策)
* **DBマイグレーション**: Flask-Migrate (Alembic)
* **デプロイ**: Render (Gunicorn)
* **開発環境**: Podman (Mac/Fedora), Python venv
* **その他**: python-dotenv, requests, python-dateutil, zoneinfo (Python 3.9+)

### **3.  アーキテクチャ・構成**

* 標準的なFlask構成（アプリケーションファクトリ使用）。
* 機能ごとにBlueprintを使用 (auth, main, vehicle, fuel, maintenance, notes, achievements, **activity** など)。
* `models.py` にDBモデル定義 (`User`, `Motorcycle`, `FuelEntry`, `MaintenanceEntry`, `OdoResetLog`, `GeneralNote`, `AchievementDefinition`, `UserAchievement`, **`SettingSheet`, `ActivityLog`, `SessionLog`** など)。
* `forms.py` にFlask-WTFフォームクラス定義。
* `motopuppu/views/` 以下に各Blueprintのルート定義。
* `templates/`, `static/` ディレクトリ。
* **グローバルな車両リストの読み込み**: `@before_request` ハンドラで、ログインユーザーの車両リストを `g.user_motorcycles` に格納し、ナビゲーションバーのドロップダウンメニューで使用。

### **4.  主要な実装済み機能**

* ユーザー認証 (Misskey MiAuth, ローカル開発用ログイン)
* 車両管理 (CRUD, 複数対応、デフォルト設定)
    * **レーサー車両と公道車両の区別** (総稼働時間またはODOメーターでの管理)
* ODOメーターリセット機能 (公道車両向けCRUD)
* 給油記録 (公道車両向けCRUD, ログ表示, フィルター/ソート, CSVエクスポート)
* 整備記録 (公道車両向けCRUD, ログ表示, フィルター/ソート, CSVエクスポート)
* ノート (CRUD、カテゴリ別[ノート/タスクリスト], ログ表示, フィルター)
* メンテナンスリマインダー (CRUD)
* ダッシュボード (統計概要, FullCalendar表示, フィルター機能)
* 実績機能 (イベントドリブンな解除、遡及処理用CLIコマンド)
* Misskey共有機能
* **活動ログ & セッティングシート機能 (ベータ版):**
    * **目的:** サーキット走行やツーリングなど、特定の活動における車両セッティングとパフォーマンスを記録・管理。
    * **対象:** **公道・レーサーを問わず全車両で利用可能。**
    * **`SettingSheet` (セッティングシート):**
        * サスペンション、タイヤ等のセットアップ情報を「テンプレート」として名前を付けて保存 (CRUD)。
        * アーカイブ（論理削除）機能。
        * JavaScriptによる動的フォームで、記録したいカテゴリ（サス、タイヤ等）を自由に追加・削除可能。データはJSONBで柔軟に保存。
    * **`ActivityLog` (活動ログ):**
        * 「7/5の走行会」のように、日付や場所、天候といった1日の活動をまとめるコンテナとして記録 (CRUD)。
    * **`SessionLog` (セッションログ):**
        * 活動ログの中で、「1本目」「2本目」のような個別の走行セッションを記録 (CRUD)。
        * セッションごとに、作成済みの`SettingSheet`を選択して紐付け。
        * ライダーの所感や、車両タイプに応じた走行前後のODO/稼働時間を記録。
    * **UI/UX:**
        * ナビゲーションバーの「活動ログ」から、ドロップダウンメニューで直接各車両の活動ログ一覧へアクセス可能。

### **5.  現在の状況・課題 [毎回更新]**

* **マイグレーション:**
    * **直近の作業で、多数存在したマイグレーションファイルを単一のファイルに統合済み。**
    * 開発環境・本番環境ともに、`flask db stamp head` コマンド等を用いて最新のスキーマ状態に更新済み。
    * **最新リビジョン: `e391d758c56d` (Initial consolidated migration from existing models)**

* **直近の作業 (完了済み):**
    * **DBマイグレーション履歴の統合:** 開発・本番環境のDBを維持したまま、Alembicのバージョン情報のみを最新化。
    * **`VehicleForm`の修正:** `models.py`の`Motorcycle`モデルとの不整合を解消し、車両登録・編集機能のエラーを修正。

* **現在の課題・改善点:**
    * a. **テストコードの拡充:** 活動ログ機能群に対する単体テスト・結合テストの作成が急務。
    * b. **活動ログ機能のUI/UX改善:** ラップタイムの入力・表示UI、セッティングシートの複製機能など、より使いやすくするための改善。
    * c. **レーサー車両向け機能の拡充:** 稼働時間ベースの**整備記録**機能。
    * d. **重要コンポーネントのライフサイクル管理:** セッションログのデータを活用した、より精度の高い部品寿命の追跡機能。
    * e. **その他既存の課題:** CSRF対策の精査、DB制約の見直し、リファクタリングなど。

### **6.  現在のプロジェクトディレクトリ:**

kyagisaw@kyagisaw-mac motopuppu % tree
.
├── announcements.json
├── compose.yml
├── Dockerfile
├── drafts
│   ├── gemini_prompt.txt
│   └── racer_draft.md
├── fonts
│   └── ipaexg.ttf
├── instance
├── LICENSE
├── migrations
│   ├── alembic.ini
│   ├── env.py
│   ├── README
│   ├── script.py.mako
│   └── versions
│       ├── 309af67c371a_add_primary_and_gear_ratios_to_.py
│       ├── 65cb43e34218_add_team_models_for_team_functionality.py
│       ├── 8ffa50023b83_add_gps_tracks_to_sessionlog.py
│       ├── bf41f9654c05_add_usercircuittarget_model_for_target_.py
│       ├── e391d758c56d_initial_consolidated_migration_from_.py
│       └── e41c7c921b61_add_public_share_fields_to_sessionlog.py
├── motopuppu
│   ├── __init__.py
│   ├── achievement_evaluator.py
│   ├── achievements_utils.py
│   ├── constants.py
│   ├── forms.py
│   ├── manage_commands.py
│   ├── models.py
│   ├── parsers
│   │   ├── __init__.py
│   │   ├── base_parser.py
│   │   ├── drogger_parser.py
│   │   ├── mylaps_parser.py
│   │   ├── simple_csv_parser.py
│   │   └── ziix_parser.py
│   ├── services.py
│   ├── static
│   │   ├── css
│   │   │   ├── garage_themes
│   │   │   │   ├── theme_adventure.css
│   │   │   │   ├── theme_classic.css
│   │   │   │   ├── theme_cyber.css
│   │   │   │   ├── theme_dark.css
│   │   │   │   ├── theme_default.css
│   │   │   │   ├── theme_minimal.css
│   │   │   │   ├── theme_racing.css
│   │   │   │   └── theme_retro.css
│   │   │   └── style.css
│   │   ├── favicons
│   │   │   ├── apple-touch-icon.png
│   │   │   ├── favicon-96x96.png
│   │   │   ├── favicon.ico
│   │   │   ├── favicon.svg
│   │   │   ├── web-app-manifest-192x192.png
│   │   │   └── web-app-manifest-512x512.png
│   │   ├── images
│   │   │   └── blobcat_8bit.webp
│   │   ├── js
│   │   │   ├── filter_persistence.js
│   │   │   ├── gas_station_search.js
│   │   │   ├── global_search.js
│   │   │   ├── lap_time_manager.js
│   │   │   ├── map_viewer.js
│   │   │   ├── misskey_share.js
│   │   │   └── odo_toggle.js
│   │   └── manifest.json
│   ├── templates
│   │   ├── _breadcrumbs.html
│   │   ├── achievements
│   │   │   └── unlocked_list.html
│   │   ├── activity
│   │   │   ├── activity_form.html
│   │   │   ├── best_settings.html
│   │   │   ├── compare_sessions.html
│   │   │   ├── detail_activity.html
│   │   │   ├── list_activities.html
│   │   │   ├── list_settings.html
│   │   │   ├── public_session.html
│   │   │   ├── session_form.html
│   │   │   └── setting_form.html
│   │   ├── auth
│   │   │   └── delete_account_complete.html
│   │   ├── base.html
│   │   ├── circuit_dashboard
│   │   │   └── index.html
│   │   ├── dashboard
│   │   │   ├── _calendar_widget.html
│   │   │   ├── _reminders_widget.html
│   │   │   ├── _stats_widget.html
│   │   │   ├── _timeline_widget.html
│   │   │   └── _vehicles_widget.html
│   │   ├── dashboard.html
│   │   ├── event
│   │   │   ├── event_detail.html
│   │   │   ├── event_form.html
│   │   │   ├── list_events.html
│   │   │   ├── public_event_view.html
│   │   │   └── public_list_events.html
│   │   ├── fuel_form.html
│   │   ├── fuel_log.html
│   │   ├── garage
│   │   │   ├── public_garage.html
│   │   │   └── settings.html
│   │   ├── help
│   │   │   ├── _sidebar.html
│   │   │   ├── faq.html
│   │   │   ├── features
│   │   │   │   ├── activity_log.html
│   │   │   │   ├── dashboard.html
│   │   │   │   ├── fuel.html
│   │   │   │   ├── maintenance.html
│   │   │   │   ├── notes.html
│   │   │   │   ├── reminders.html
│   │   │   │   └── vehicles.html
│   │   │   ├── getting_started.html
│   │   │   ├── index.html
│   │   │   └── layout.html
│   │   ├── index.html
│   │   ├── leaderboard
│   │   │   ├── index.html
│   │   │   └── ranking.html
│   │   ├── legal
│   │   │   ├── privacy_policy.html
│   │   │   └── terms_of_service.html
│   │   ├── maintenance_form.html
│   │   ├── maintenance_log.html
│   │   ├── navigation.html
│   │   ├── note_form.html
│   │   ├── notes_log.html
│   │   ├── odo_reset_log_form.html
│   │   ├── profile
│   │   │   └── settings.html
│   │   ├── reminder
│   │   │   ├── list_reminders.html
│   │   │   └── reminder_form.html
│   │   ├── spec_sheet
│   │   │   ├── list_sheets.html
│   │   │   ├── sheet_form.html
│   │   │   └── view_sheet.html
│   │   ├── team
│   │   │   ├── join_team.html
│   │   │   ├── list_teams.html
│   │   │   ├── manage_team.html
│   │   │   ├── team_dashboard.html
│   │   │   └── team_form.html
│   │   ├── touring
│   │   │   ├── _misskey_note_card.html
│   │   │   ├── detail_log.html
│   │   │   ├── list_logs.html
│   │   │   └── touring_log_form.html
│   │   ├── vehicle_form.html
│   │   └── vehicles.html
│   ├── utils
│   │   ├── datetime_helpers.py
│   │   └── lap_time_utils.py
│   └── views
│       ├── achievements.py
│       ├── activity
│       │   ├── __init__.py
│       │   ├── activity_routes.py
│       │   ├── session_routes.py
│       │   └── setting_routes.py
│       ├── auth.py
│       ├── circuit_dashboard.py
│       ├── dev_auth.py
│       ├── event.py
│       ├── fuel.py
│       ├── garage_settings.py
│       ├── garage.py
│       ├── help.py
│       ├── leaderboard.py
│       ├── main.py
│       ├── maintenance.py
│       ├── notes.py
│       ├── profile.py
│       ├── reminder.py
│       ├── search.py
│       ├── spec_sheet.py
│       ├── team.py
│       ├── touring.py
│       └── vehicle.py
├── README.md
├── requirements.txt
└── tests

35 directories, 152 files

### **7.  今回のセッションでの目標 [毎回更新]**

* （ここに次の開発目標を記載してください）
* 現在の実装について確認が必要なファイルを指定してください。それらのファイルを送付するので、すべて確認してから実装案を作成してください

### **8.  Geminiに期待する役割**

* コードの提案、修正案の提示 (ファイル全体の表示希望)
* 実装に関する質問への回答
* コードレビュー
* エラー分析と解決策の提案

### **9.  その他 [必要に応じて]**

* DBスキーマの変更については、過去に問題が発生した経験があるため、特に慎重に進めたい。
* 修正は既存のUIや他の機能への影響を最小限に抑えたい。